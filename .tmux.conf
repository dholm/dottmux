###
# General

# Use C-t as prefix key which does not collide with Emacs or Vim
unbind-key C-b
set-option -g prefix C-t
bind-key -r C-t send-prefix

# React faster to the escape sequence
set-option -s escape-time 0

# Use Emacs key bindings
set-window-option -g mode-keys emacs
set-option -g status-keys emacs

# Increase the history limit to something reasonable
set-option -g history-limit 20000

# Reload the config with prefix + r
unbind-key r
bind-key r source-file ~/.tmux.conf

# Bind copy mode to prefix + space
bind-key space copy-mode

# Enable mouse support where available
set-option -g mouse on

# Take over session (detach all other clients).
bind-key T detach-client -a

# Focus events enabled for terminals that support them.
set-option -g focus-events on


###
# Theme

# Support 256 colours
set-option -g default-terminal "screen-256color"

# Load the Solarized theme for 256 color terminals
source-file ~/.tmux/vendor/tmux-colors-solarized/tmuxcolors-256.conf

# Setup message bar
set-option -g display-time 2000
set-option -g display-panes-time 2000

# Allow xterm titles in terminal window and terminal scrolling with scrollbar
set-option -g terminal-overrides "xterm*:XT:smcup@:rmcup@"

# Set the terminal's title bar (if available)
set-option -g set-titles on
# [hostname:session name] window name
set-option -g set-titles-string "[#H:#S] #W"

# Logging of current window.
bind-key C-l pipe-pane -o "exec cat >>${HOME}/'#W-tmux.log'" \; display-message 'Toggled logging to ${HOME}/#W-tmux.log'
bind-key M-l pipe-pane \; display-message 'Ended logging to ${HOME}/#W-tmux.log'


###
# Windows

# Start indexing windows from 1
set-option -g base-index 1

# Show bell from any window
set-option -g bell-action any

# Show the activity in background windows
set-window-option -g monitor-activity on

# Do not overwrite name from SSH etc
set-window-option -g automatic-rename off

# Window navigation
bind-key -r p previous-window
bind-key -r n next-window

# Window toggling
bind-key -r tab last-window

# Resize windows based on the smallest client viewing it.
set-window-option -g aggressive-resize on

# Kill current window.
bind-key X confirm kill-window


###
# Status bar

# Use rainbarf, if available
if-shell 'which rainbarf >/dev/null' 'source-file ~/.tmux/rainbarf.conf'


###
# Panes

# Split windows with | -
unbind-key %
bind-key -r | split-window -h
bind-key -r - split-window -v

# Highlight active pane
set-option -g pane-border-fg black
set-option -g pane-active-border-fg brightred

# Pane navigation
bind-key -r C-p select-pane -U
bind-key -r C-n select-pane -D
bind-key -r C-b select-pane -L
bind-key -r C-f select-pane -R

# Pane movement
bind-key j command-prompt -p "Join pane from:"  "join-pane -s '%%'"

# Layout toggling
bind-key -r l next-layout

# Resizing
bind-key -r C-M-p resize-pane -U 10
bind-key -r C-M-n resize-pane -D 10
bind-key -r C-M-b resize-pane -L 10
bind-key -r C-M-f resize-pane -R 10

# Start indexing panes from 1.
set-option -g pane-base-index 1

# Synchronize input to all panes.
bind-key S set-window-option synchronize-panes

# Kill current pane.
bind-key x confirm kill-pane


###
# Sessions

# Bind prefix-C to create a new session.
bind-key C command-prompt -p "New session name:"  "new-session -s '%%'"

# Bind prefix-J to join window from another session.
bind-key J command-prompt -p "Join window from:"  "move-window -s '%%'"

# Bind prefix-C-d to terminate the current shell and reattach to tmux if it was
# the last open window of the current session.
bind-key C-d run-shell " \
    if [ #{session_windows} -eq 1 ] && \
       [ #{window_panes} -eq 1 ]; then \
        if [ \$(tmux list-sessions | wc -l) -ge 2 ]; then \
            tmux switch-client -ln; \
        fi; \
        tmux kill-session -t \"#S\"; \
    else \
        tmux display-message \"Ignoring kill session...\"; \
    fi; \
    "


###
# Platform specific configurations
if-shell 'test "$(uname)" = "Darwin"' 'source-file ~/.tmux/osx.conf'
if-shell 'test "$(uname)" = "Linux"' 'source-file ~/.tmux/linux.conf'


###
# Plugins
set-option -g @plugin 'tmux-plugins/tpm'
# Automatically save sessions.
set-option -g @plugin 'tmux-plugins/tmux-continuum'
# Display laptop battery status.
set-option -g @plugin 'tmux-plugins/tmux-battery'
# Open urls/paths displayed in tmux.
set-option -g @plugin 'tmux-plugins/tmux-open'
# Logging of individual panes.
set-option -g @plugin 'tmux-plugins/tmux-logging'

###
# Local configuration
if-shell 'test -r ~/.tmux.local.conf' 'source-file ~/.tmux.local.conf'


###
# Plugin manager
run '~/.tmux/plugins/tpm/tpm'
###

## Local Variables:
## coding: utf-8
## indent-tabs-mode: nil
## End:
